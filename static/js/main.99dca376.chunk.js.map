{"version":3,"sources":["atoms.ts","routes/Home.tsx","theme.ts","components/UpperMenu.tsx","components/coin/Coin.tsx","components/coin/Coins.tsx","routes/coin/Coinlist.tsx","components/coin/Chart.tsx","components/coin/Price.tsx","components/coin/CoinInfo.tsx","api.ts","components/todolist/RegTodo.tsx","components/todolist/TodoItms.tsx","components/todolist/CateBox.tsx","components/todolist/RegCate.tsx","routes/todo/Todolist.tsx","components/motion/Motion.tsx","App.tsx","index.tsx"],"names":["darkModeState","atom","key","default","coinsState","todoData","todoLoaded","Wrapper","styled","div","Home","darkTheme","bgColor","textColor","accentColor","lightTheme","Menu","props","theme","BtnWarpper","ModeToggleBtn","svg","menuIndicatorAttrs","borderBottom","UpperMenu","useRecoilState","isDarkMode","setIsDarkMode","onToggle","curr","homeMatch","useRouteMatch","coinListMatch","toDoListMatch","motionMatch","style","isExact","to","as","onClick","color","focusable","xmlns","viewBox","fill","d","ACoin","li","Coin","coin","pathname","id","state","name","symbol","width","height","src","toLowerCase","Status","span","Coins","useState","isLoading","setIsLoading","coins","setCoins","getData","a","fetch","json","data","useEffect","slice","map","React","memo","Coinlist","Title","Chart","useRecoilValue","coinId","useParams","useLocation","endDate","Math","floor","Date","now","startDate","then","response","console","log","useQuery","sData","series","Object","values","quotes","USD","options","chart","toolbar","show","background","xaxis","categories","keys","labels","rotate","yaxis","mode","palette","tooltip","y","formatter","value","toFixed","type","Price","InnerWrapper","InfoSpan","Tabs","Tab","CoinInfo","coinState","setACoinState","path","setLocalToDoData","length","window","localStorage","setItem","JSON","stringify","Input","input","Btn","button","Form","form","RegTodo","cateName","useForm","register","handleSubmit","setValue","formState","setToDoData","onSubmit","toDoCnts","startDt","endDt","newToDo","allBoardData","required","minLength","message","placeholder","errors","Info","DelBtn","TodoItms","cnts","setTodoData","allBoards","idx","findIndex","board","h1","Items","ul","CateBox","dataObj","isTodoLoaded","dataCopy","isLoaded","delLocalToDoData","toUpperCase","todo","RegCate","cate","newBoard","CateList","Todolist","toDoData","setIsTodoLoaded","useSetRecoilState","localData","getItem","parse","Grid","Box","motion","Circle","Overlay","BigBox","boxVariants","hover","scale","border","active","exit","p","Motion","idClicked","setIdClicked","prevPrevId","setPrevPrevId","prevId","setPrevId","isPoped","setIsPoped","variants","whileHover","animate","layoutId","onPop","AnimatePresence","backgroundColor","GlobalStyle","createGlobalStyle","App","basename","process","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.99dca376.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const darkModeState = atom({\r\n  key: \"darkMode\",\r\n  default: false,\r\n});\r\n\r\nexport interface ICoins {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nexport interface IACoin {\r\n  beta_value: number;\r\n  circulating_supply: number;\r\n  first_data_at: string;\r\n  id: string;\r\n  last_updated: string;\r\n  max_supply: number;\r\n  name: string;\r\n  quotes: IQuotes;\r\n  rank: string;\r\n  symbol: string;\r\n  total_supply: number;\r\n}\r\n\r\nexport interface IQuotes {\r\n  USD: {\r\n    ath_date: string;\r\n    ath_price: number;\r\n    market_cap: number;\r\n    market_cap_change_24h: number;\r\n    percent_change_1h: number;\r\n    percent_change_1y: number;\r\n    percent_change_6h: number;\r\n    percent_change_7d: number;\r\n    percent_change_12h: number;\r\n    percent_change_15m: number;\r\n    percent_change_24h: number;\r\n    percent_change_30d: number;\r\n    percent_change_30m: number;\r\n    percent_from_price_ath: number;\r\n    price: number;\r\n    volume_24h: number;\r\n    volume_24h_change_24h: number;\r\n  };\r\n}\r\n\r\nexport const coinsState = atom<ICoins[]>({\r\n  key: \"coinsState\",\r\n  default: [],\r\n});\r\n\r\nexport const aCoinState = atom<IACoin[]>({\r\n  key: \"aCoinState\",\r\n  default: [],\r\n});\r\n\r\nexport const todoCateState = atom<string[]>({\r\n  key: \"category\",\r\n  default: [],\r\n});\r\n\r\nexport interface IToDo {\r\n  id: number;\r\n  startDt?: string;\r\n  endDt?: string;\r\n  toDoCnts: string;\r\n}\r\n\r\nexport interface IToDoData {\r\n  [cate: string]: IToDo[];\r\n}\r\n\r\nexport const todoData = atom<IToDoData>({\r\n  key: \"todoDAta\",\r\n  default: {},\r\n});\r\n\r\nexport const todoLoaded = atom<boolean>({\r\n  key: \"todoLoaded\",\r\n  default: false,\r\n});\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport Coindetail from \"./coin/Coindetail\";\r\nimport Coinlist from \"./coin/Coinlist\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nconst Wrapper = styled.div``;\r\nfunction Home() {\r\n  return (\r\n    <Wrapper>\r\n      {/*  \r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Welcome />\r\n        </Route>\r\n        <Route path=\"/coinlist\">\r\n          <Coinlist />\r\n        </Route>\r\n        <Route path=\"/detail/:coinId\">\r\n          <Coindetail />\r\n        </Route>\r\n      </Switch> */}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { atom } from \"recoil\";\r\nimport { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"black\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9b59b6\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"white\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9b59b6\",\r\n};\r\n","import { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { darkModeState } from \"../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  height: 100px;\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  box-shadow: 0px 2px 5px ${(props) => props.theme.textColor};\r\n  padding: 20px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nconst BtnWarpper = styled.div`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  position: absolute;\r\n  right: 10px;\r\n`;\r\n\r\nconst ModeToggleBtn = styled.svg`\r\n  color: ${(props) => props.theme.textColor};\r\n  width: 1rem;\r\n  height: 1rem;\r\n`;\r\nconst menuIndicatorAttrs = {\r\n  borderBottom: \"5px solid blue\",\r\n};\r\n\r\nfunction UpperMenu() {\r\n  const [isDarkMode, setIsDarkMode] = useRecoilState(darkModeState);\r\n  const onToggle = () => {\r\n    setIsDarkMode((curr) => !curr);\r\n  };\r\n  const homeMatch = useRouteMatch(\"/\");\r\n  const coinListMatch = useRouteMatch(\"/coinlist\");\r\n  const toDoListMatch = useRouteMatch(\"/todolist\");\r\n  const motionMatch = useRouteMatch(\"/motion\");\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Menu>\r\n        <Link style={homeMatch?.isExact ? menuIndicatorAttrs : {}} to=\"/\">\r\n          Home\r\n        </Link>\r\n        <span> &nbsp; | &nbsp;</span>\r\n        <Link\r\n          style={coinListMatch?.isExact ? menuIndicatorAttrs : {}}\r\n          to=\"/coinlist\"\r\n        >\r\n          Coin List\r\n        </Link>\r\n        <span> &nbsp; | &nbsp;</span>\r\n        <Link\r\n          style={toDoListMatch?.isExact ? menuIndicatorAttrs : {}}\r\n          to=\"/todolist\"\r\n        >\r\n          ToDo List\r\n        </Link>\r\n        <span> &nbsp; | &nbsp;</span>\r\n        <Link\r\n          style={motionMatch?.isExact ? menuIndicatorAttrs : {}}\r\n          to=\"/motion\"\r\n        >\r\n          Framer motion\r\n        </Link>\r\n        {isDarkMode ? (\r\n          <BtnWarpper as=\"button\" onClick={onToggle}>\r\n            <ModeToggleBtn\r\n              style={{ color: \"rgb(224, 214, 73)\" }}\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\r\n              ></path>\r\n            </ModeToggleBtn>\r\n          </BtnWarpper>\r\n        ) : (\r\n          <BtnWarpper as=\"button\" onClick={onToggle}>\r\n            <ModeToggleBtn\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\r\n              ></path>\r\n            </ModeToggleBtn>\r\n          </BtnWarpper>\r\n        )}\r\n      </Menu>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default UpperMenu;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ICoins } from \"../../atoms\";\r\n\r\nconst ACoin = styled.li`\r\n  background-color: ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  margin-bottom: 20px;\r\n  box-shadow: 0px 5px 10px #49a9e0;\r\n  transition: 0.5s;\r\n  a {\r\n    padding: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    color: #f1c40f;\r\n    transform: rotateX(360deg);\r\n  }\r\n`;\r\n\r\ninterface ICoin {\r\n  coin: ICoins;\r\n}\r\n\r\nfunction Coin({ coin }: ICoin) {\r\n  return (\r\n    <>\r\n      <ACoin key={coin.id}>\r\n        <Link\r\n          to={{\r\n            pathname: `/coin/${coin.id}`,\r\n            state: {\r\n              id: coin.id,\r\n              name: coin.name,\r\n              symbol: coin.symbol,\r\n            },\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: \"1.5rem\", height: \"1.5rem\" }}\r\n            src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n          />\r\n          &nbsp;&nbsp;&nbsp;\r\n          {coin.name}\r\n        </Link>\r\n      </ACoin>\r\n    </>\r\n  );\r\n}\r\nexport default Coin;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { coinsState } from \"../../atoms\";\r\nimport Coin from \"./Coin\";\r\n\r\nconst Status = styled.span`\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 1rem;\r\n  place-self: center;\r\n`;\r\n\r\nfunction Coins() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [coins, setCoins] = useRecoilState(coinsState);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const data = await (\r\n        await fetch(\"https://api.coinpaprika.com/v1/coins\")\r\n      ).json();\r\n      setCoins(data);\r\n      setIsLoading(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {isLoading ? (\r\n          <Status>Loading...</Status>\r\n        ) : (\r\n          coins.slice(0, 100).map((coin) => <Coin key={coin.id} coin={coin} />)\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(Coins);\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Coins from \"../../components/coin/Coins\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 650px;\r\n  margin: 0 auto;\r\n`;\r\nfunction Coinlist() {\r\n  return (\r\n    <Wrapper>\r\n      <h1>Today's Coins</h1>\r\n      <hr></hr>\r\n      <Coins />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Coinlist;\r\n","import ApexCharts from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { darkModeState, IACoin } from \"../../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 500px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  border-top: 0;\r\n  font-size: 3rem;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 2rem;\r\n  color: tomato;\r\n`;\r\n\r\ninterface IHisData {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart() {\r\n  const isDarkMode = useRecoilValue(darkModeState);\r\n  const { coinId } = useParams<{ coinId: string }>();\r\n  const { state } = useLocation<{ data: IACoin }>();\r\n\r\n  const getData = () => {\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60 * 60 * 24 * 7;\r\n    return fetch(\r\n      `https://api.coinpaprika.com/v1/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n    ).then((response) => response.json());\r\n  };\r\n\r\n  console.log(useQuery<IHisData[]>(\"callAPI\", () => getData()));\r\n\r\n  const { isLoading, data } = useQuery<IHisData[]>(\"callAPI\", () => getData());\r\n\r\n  console.log(\"coinId\", coinId);\r\n  console.log(\"state\", state?.data);\r\n\r\n  const sData = {\r\n    series: [\r\n      {\r\n        name: \"Changing Rate\",\r\n        data: Object.values(state?.data.quotes.USD),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Change Rates</Title>\r\n      <ApexCharts\r\n        options={{\r\n          chart: {\r\n            toolbar: {\r\n              show: false,\r\n            },\r\n            background: \"transparent\",\r\n            width: \"100%\",\r\n          },\r\n          xaxis: {\r\n            categories: Object.keys(state?.data.quotes.USD),\r\n            labels: { rotate: -90 },\r\n          },\r\n          yaxis: { show: false },\r\n          theme: {\r\n            mode: isDarkMode ? \"dark\" : \"light\",\r\n            palette: \"pallete1\",\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: (value) => value.toFixed(2),\r\n            },\r\n          },\r\n        }}\r\n        series={sData.series}\r\n        type=\"line\"\r\n        width=\"500\"\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Chart;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 500px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  border-top: 0;\r\n  font-size: 3rem;\r\n`;\r\nfunction Price() {\r\n  return <Wrapper>Price</Wrapper>;\r\n}\r\nexport default Price;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, Route, Switch, useLocation, useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { aCoinState, coinsState, IACoin } from \"../../atoms\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  p {\r\n    margin: 20px auto;\r\n  }\r\n`;\r\n\r\nconst InfoSpan = styled.span`\r\n  border-radius: 5px;\r\n  width: 45%;\r\n  padding: 10px;\r\n  background-color: rgba(52, 73, 94, 0.5);\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  background-color: rgba(186, 235, 198, 0.4);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  padding: 10px;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  width: 45%;\r\n  background-color: rgba(52, 73, 94, 0.5);\r\n  padding: 10px;\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface IDetailProps {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n}\r\n\r\nfunction CoinInfo() {\r\n  const { coinId } = useParams<{ coinId: string }>();\r\n\r\n  const [coinState, setACoinState] = useState<IACoin>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const getData = async () => {\r\n    try {\r\n      const data = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n      ).json();\r\n\r\n      setACoinState(data);\r\n      setIsLoading(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <InnerWrapper>\r\n        <InfoSpan>ID: {coinState?.id}</InfoSpan>\r\n        <InfoSpan>Name: {coinState?.name}</InfoSpan>\r\n      </InnerWrapper>\r\n      <InnerWrapper>\r\n        <p>\r\n          {coinState?.name} :{coinState?.symbol}\r\n        </p>\r\n      </InnerWrapper>\r\n      <Tabs>\r\n        <Tab>\r\n          <Link\r\n            to={{\r\n              pathname: `/coin/${coinId}/chart`,\r\n              state: { data: coinState },\r\n            }}\r\n          >\r\n            Chart\r\n          </Link>\r\n        </Tab>\r\n        <Tab>\r\n          <Link to={`/coin/${coinId}/price`}>Price</Link>\r\n        </Tab>\r\n      </Tabs>\r\n\r\n      <Switch>\r\n        <Route path=\"/coin/:coinId/chart\">\r\n          <Chart />\r\n        </Route>\r\n        <Route path=\"/coin/:coinId/price\">\r\n          <Price />\r\n        </Route>\r\n      </Switch>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CoinInfo;\r\n","import { IToDoData } from \"./atoms\";\r\n\r\nexport function getLocalToDoData() {\r\n  return window.localStorage.getItem(\"todo\");\r\n}\r\n\r\nexport const setLocalToDoData = (data: IToDoData) => {\r\n  if (Object.keys(data).length !== 0) {\r\n    window.localStorage.setItem(\"todo\", JSON.stringify(data));\r\n  }\r\n};\r\n\r\nexport const delLocalToDoData = (\r\n  data: IToDoData,\r\n  isLoaded?: boolean | undefined\r\n) => {\r\n  if (isLoaded) {\r\n    window.localStorage.setItem(\"todo\", JSON.stringify(data));\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IToDo, todoData } from \"../../atoms\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useEffect } from \"react\";\r\nimport { setLocalToDoData } from \"../../api\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\nconst InnerWrapper = styled.div``;\r\nconst Input = styled.input``;\r\nconst Btn = styled.button``;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n  }\r\n  p {\r\n    font-size: 12px;\r\n    color: red;\r\n  }\r\n`;\r\n\r\nfunction RegTodo({ cateName }: { cateName: string }) {\r\n  const { register, handleSubmit, setValue, formState } = useForm<IToDo>();\r\n  const [data, setToDoData] = useRecoilState(todoData);\r\n\r\n  const onValid = ({ toDoCnts, startDt, endDt }: IToDo) => {\r\n    const newToDo = {\r\n      id: Date.now(),\r\n      toDoCnts,\r\n      startDt,\r\n      endDt,\r\n    };\r\n    setToDoData((allBoardData) => {\r\n      return {\r\n        ...allBoardData,\r\n        [cateName]: [...allBoardData[cateName], newToDo],\r\n      };\r\n    });\r\n\r\n    setValue(\"toDoCnts\", \"\");\r\n    setValue(\"startDt\", \"\");\r\n    setValue(\"endDt\", \"\");\r\n  };\r\n\r\n  setLocalToDoData(data);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <InnerWrapper>\r\n        <Form onSubmit={handleSubmit(onValid)}>\r\n          <Input\r\n            {...register(\"toDoCnts\", {\r\n              required: \"할일은 필수 입력값입니다. \",\r\n              minLength: { value: 2, message: \"2자이상 입력하세요.\" },\r\n            })}\r\n            placeholder=\"Regist your Todo...\"\r\n          />\r\n          <p>{formState.errors.toDoCnts?.message}</p>\r\n          <Input\r\n            {...register(\"startDt\", { required: \"시작일을 입력하세요.\" })}\r\n            placeholder=\"Write start date...\"\r\n          />\r\n          <p>{formState.errors.startDt?.message}</p>\r\n          <Input\r\n            {...register(\"endDt\", { required: \"목표일을 입력하세요.\" })}\r\n            placeholder=\"Write end date...\"\r\n          />\r\n          <p>{formState.errors.endDt?.message}</p>\r\n          <Btn>Add</Btn>\r\n        </Form>\r\n      </InnerWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default RegTodo;\r\n","import { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { delLocalToDoData } from \"../../api\";\r\nimport { IToDo, todoData, todoLoaded } from \"../../atoms\";\r\nimport RegTodo from \"./RegTodo\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 10px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  span {\r\n    flex: 1;\r\n    min-width: 50px;\r\n  }\r\n  p {\r\n    flex: 3;\r\n    font-weight: bold;\r\n    min-width: 100px;\r\n  }\r\n`;\r\nconst DelBtn = styled.svg`\r\n  align-self: end;\r\n  width: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction TodoItms({\r\n  id,\r\n  startDt,\r\n  endDt,\r\n  cnts,\r\n  cateName,\r\n}: {\r\n  id: number;\r\n  startDt?: string;\r\n  endDt?: string;\r\n  cnts: string;\r\n  cateName: string;\r\n}) {\r\n  const [data, setTodoData] = useRecoilState(todoData);\r\n  const onClick = (cateName: string, id: number) => {\r\n    setTodoData((allBoards) => {\r\n      const idx = allBoards[cateName].findIndex((board) => board.id === id);\r\n\r\n      return {\r\n        ...allBoards,\r\n        [cateName]: [\r\n          ...allBoards[cateName].slice(0, idx),\r\n          ...allBoards[cateName].slice(idx + 1),\r\n        ],\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <DelBtn\r\n        onClick={() => onClick(cateName, id)}\r\n        focusable=\"false\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"\r\n        ></path>\r\n      </DelBtn>\r\n      <Info>\r\n        <span>할일:</span>\r\n        <p>{cnts}</p>\r\n      </Info>\r\n      <Info>\r\n        <span>기간:</span>\r\n        <p>\r\n          {startDt} ~ {endDt}\r\n        </p>\r\n      </Info>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default TodoItms;\r\n","import { constSelector, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { delLocalToDoData } from \"../../api\";\r\nimport { IToDo, IToDoData, todoData, todoLoaded } from \"../../atoms\";\r\nimport RegTodo from \"./RegTodo\";\r\nimport TodoItms from \"./TodoItms\";\r\n\r\nconst Wrapper = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 5px;\r\n  background-color: rgba(200, 214, 229, 0.5);\r\n  margin: 0 5px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  width: 100%;\r\n  min-height: 300px;\r\n  padding: 10px;\r\n\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  text-align: center;\r\n`;\r\n\r\nconst DelBtn = styled.svg`\r\n  align-self: end;\r\n  width: 15px;\r\n  cursor: pointer;\r\n`;\r\ninterface ICateBox {\r\n  dataObj: IToDo[];\r\n  cateName: string;\r\n  key: number;\r\n}\r\n\r\nfunction CateBox({ dataObj, cateName }: ICateBox) {\r\n  const [data, setToDoData] = useRecoilState(todoData);\r\n  const isTodoLoaded = useRecoilValue(todoLoaded);\r\n  const onClick = (cateName: string) => {\r\n    const dataCopy = { ...data };\r\n    delete dataCopy[cateName];\r\n    setToDoData(dataCopy);\r\n    delLocalToDoData(dataCopy, isTodoLoaded);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <DelBtn\r\n        onClick={() => onClick(cateName)}\r\n        focusable=\"false\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"\r\n        ></path>\r\n      </DelBtn>\r\n      <Title>{cateName.toUpperCase()}</Title>\r\n      <RegTodo cateName={cateName} />\r\n      <Items>\r\n        {dataObj.map((todo, idx) => (\r\n          <TodoItms\r\n            key={idx}\r\n            id={todo.id}\r\n            startDt={todo.startDt}\r\n            endDt={todo.endDt}\r\n            cnts={todo.toDoCnts}\r\n            cateName={cateName}\r\n          />\r\n        ))}\r\n      </Items>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CateBox;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { setLocalToDoData } from \"../../api\";\r\nimport { todoData } from \"../../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex: 8 2 auto;\r\n  flex-wrap: wrap;\r\n\r\n  input {\r\n    flex: 1 1 80%;\r\n  }\r\n  button {\r\n    flex: 1 1 15%;\r\n  }\r\n\r\n  p {\r\n    flex: 1 1 80%;\r\n    color: red;\r\n    font-size: 12px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  width: 70%;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  margin: 0 10px;\r\n`;\r\n\r\nfunction RegCate() {\r\n  const { register, handleSubmit, formState, setValue } =\r\n    useForm<{ cate: string }>();\r\n  const [data, setToDoData] = useRecoilState(todoData);\r\n  const onValid = ({ cate }: { cate: string }) => {\r\n    setToDoData((allBoardData) => {\r\n      const newBoard = {\r\n        [cate]: [],\r\n      };\r\n      return { ...allBoardData, ...newBoard };\r\n    });\r\n    setValue(\"cate\", \"\");\r\n  };\r\n\r\n  setLocalToDoData(data);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form onSubmit={handleSubmit(onValid)}>\r\n        <Input\r\n          {...register(\"cate\", {\r\n            required: \"값을 입력하세요.\",\r\n          })}\r\n          placeholder=\"Regist your Todo categories ...\"\r\n        />\r\n        <Btn>Add</Btn>\r\n        <p>{formState.errors.cate?.message}</p>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default RegCate;\r\n","import { useEffect } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { getLocalToDoData, setLocalToDoData } from \"../../api\";\r\nimport { todoData, todoLoaded } from \"../../atoms\";\r\nimport CateBox from \"../../components/todolist/CateBox\";\r\nimport RegCate from \"../../components/todolist/RegCate\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 20px;\r\n  color: ${(props) => props.theme.textColor};\r\n  background-color: rgba(84, 160, 255, 1);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-weight: 400;\r\n  font-size: 3rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CateList = styled.ul`\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n`;\r\n\r\nfunction Todolist() {\r\n  const [toDoData, setToDoData] = useRecoilState(todoData);\r\n  const setIsTodoLoaded = useSetRecoilState(todoLoaded);\r\n  setLocalToDoData(toDoData);\r\n\r\n  useEffect(() => {\r\n    const localData = getLocalToDoData();\r\n    if (localData) {\r\n      setToDoData(JSON.parse(localData));\r\n      setIsTodoLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>To Do List</Title>\r\n      <RegCate />\r\n      <CateList>\r\n        {Object.keys(toDoData).map((cate, idx) => {\r\n          return <CateBox key={idx} cateName={cate} dataObj={toDoData[cate]} />;\r\n        })}\r\n      </CateList>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Todolist;\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: cover;\r\n  flex-direction: column;\r\n  background: linear-gradient(\r\n    -45deg,\r\n    rgba(255, 0, 0, 0.5),\r\n    rgba(0, 255, 255, 0.5)\r\n  );\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n\r\n  border: 1px white solid;\r\n  gap: 10px;\r\n  div:first-child,\r\n  div:last-child {\r\n    grid-column: span 2;\r\n  }\r\n`;\r\n\r\nconst Box = styled(motion.div)`\r\n  width: 200px;\r\n  height: 100px;\r\n  background-color: white;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Circle = styled(motion.div)`\r\n  background-color: #5f27cd;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst BigBox = styled(motion.div)`\r\n  width: 600px;\r\n  height: 300px;\r\n  background-color: rgb(0, 0, 0, 0.7);\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n`;\r\n\r\nconst boxVariants = {\r\n  hover: { scale: 1.2, y: -20, border: \"0.5px solid rgba(127,127,127,0.5)\" },\r\n  active: {},\r\n  exit: {},\r\n};\r\n\r\nconst Btn = styled.button`\r\n  margin: 5px 5px;\r\n  padding: 5px;\r\n  align-self: center;\r\n`;\r\n\r\nconst Noti = styled(motion.p)`\r\n  color: #ff6b6b;\r\n  font-weight: bold;\r\n`;\r\nfunction Motion() {\r\n  const [idClicked, setIdClicked] = useState(\"\");\r\n  const [prevPrevId, setPrevPrevId] = useState(\"\");\r\n  const [prevId, setPrevId] = useState(\"\");\r\n  const [isPoped, setIsPoped] = useState(false);\r\n  const onPop = (id: string) => {\r\n    console.log(id);\r\n    setPrevPrevId(idClicked);\r\n    setIdClicked(id);\r\n    setIsPoped(true);\r\n  };\r\n  const cancelPopup = () => {\r\n    setIsPoped(false);\r\n  };\r\n\r\n  const onClick = () => {\r\n    setPrevId(idClicked);\r\n    if (prevPrevId === idClicked) {\r\n      setIdClicked(prevId);\r\n    } else {\r\n      setIdClicked(prevPrevId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid>\r\n        {[1, 2, 3, 4].map((id, idx) => (\r\n          <Box\r\n            key={idx + \"\"}\r\n            variants={boxVariants}\r\n            whileHover=\"hover\"\r\n            animate=\"active\"\r\n            layoutId={id + \"\"}\r\n            onClick={() => onPop(id + \"\")}\r\n          >\r\n            {idClicked === id + \"\" ? <Circle layoutId=\"circle\" /> : null}\r\n          </Box>\r\n        ))}\r\n      </Grid>\r\n      <Btn onClick={onClick}>switch</Btn>\r\n      <AnimatePresence>\r\n        {isPoped ? (\r\n          <Overlay onClick={cancelPopup}>\r\n            <BigBox layoutId={idClicked}>\r\n              <Circle\r\n                layoutId=\"circle\"\r\n                style={{ scale: 2, backgroundColor: \"yellow\" }}\r\n              />\r\n            </BigBox>\r\n          </Overlay>\r\n        ) : null}\r\n      </AnimatePresence>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Motion;\r\n","import { useRecoilValue } from \"recoil\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { darkModeState } from \"./atoms\";\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport UpperMenu from \"./components/UpperMenu\";\nimport Coinlist from \"./routes/coin/Coinlist\";\nimport CoinInfo from \"./components/coin/CoinInfo\";\nimport Todolist from \"./routes/todo/Todolist\";\nimport Motion from \"./components/motion/Motion\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n  background-color: ${(props) => props.theme.bgColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nfunction App() {\n  const isDarkMode = useRecoilValue(darkModeState);\n\n  return (\n    <>\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n        <GlobalStyle />\n\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          {/* <BrowserRouter> */}\n          <UpperMenu />\n          <Switch>\n            <Route path=\"/coinlist\">\n              <Coinlist />\n            </Route>\n            <Route path=\"/coin/:coinId\">\n              <CoinInfo />\n            </Route>\n            <Route path=\"/todolist\">\n              <Todolist />\n            </Route>\n            <Route path=\"/motion\">\n              <Motion />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n          {/* </BrowserRouter> */}\n        </HashRouter>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}